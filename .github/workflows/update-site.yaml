name: Site update

on:
  push:
    branches:
      - "main"
  schedule:
    - cron: "0 * * * *" # Update hourly
  workflow_dispatch:

env:
  PYTHON_VERSION: 3.8
  CONDA_ENV: site-env

jobs:
  site-update:
    name: Update Status Site
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}
      - name: Prevent multiple jobs running in parallel
        id: conversion_lock
        uses: softprops/turnstyle@v1
        with:
          abort-after-seconds: 3
          poll-interval-seconds: 2
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup python
        uses: actions/setup-python@v1
        if: ${{ steps.conversion_lock.outcome == 'success' }}
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Cache conda
        uses: actions/cache@v2
        if: ${{ steps.conversion_lock.outcome == 'success' }}
        env:
          # Increase this value to reset cache if environment.yaml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yaml') }}
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        if: ${{ steps.conversion_lock.outcome == 'success' }}
        with:
          activate-environment: ${{ env.CONDA_ENV }}
          environment-file: environment.yaml
          python-version: ${{ env.PYTHON_VERSION }}
          auto-activate-base: false
          use-only-tar-bz2: true
      - name: Print conda env
        if: ${{ steps.conversion_lock.outcome == 'success' }}
        shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: Run site update
        if: ${{ steps.conversion_lock.outcome == 'success' }}
        shell: bash -l {0}
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          python src/site.py